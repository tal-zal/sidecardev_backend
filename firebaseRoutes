const express = require('express');
var bodyParser = require('body-parser')
const router = express.Router();

// create application/json parser
var jsonParser = bodyParser.json()

const rtDatabase = require('./firebase'); // Import the initialized Firebase app as created in the other file

function getDate(){
    let date_ob = new Date();
    let date = ("0" + date_ob.getDate()).slice(-2);
    // current month
    let month = ("0" + (date_ob.getMonth() + 1)).slice(-2);
    // current year
    let year = date_ob.getFullYear();
    
    return (year + "-" + month + "-" + date);
}

// Add comment or change code to the realtime database
router.post('/databasePost', jsonParser, (req, res) => {

    const date = getDate();

    // Retrieve data from the post
    const postDataParam = req.query;
    const postDataBody = req.body;

    const username = postDataParam.username;
    const data = postDataBody.data;

    const lobbyID = postDataParam.lobbyID;
    // Either "code" or "message" depending on the post type
    const postType = postDataParam.postType;

    // Add a new message to the database
    if (postType == "message") {
        const textObject = {'username' : username, 'message' : data};
        // Path of the database to write to
        const dataRef = rtDatabase.ref(date + "/" + lobbyID + "/messages/");
        dataRef.push(textObject, (error) => {
            if (error) {
                res.send("There was an error sending " + postDataParam + "to the API.");
            }
            else {
                res.send(postDataParam);
            }
        })
    // Update the "code" object in the database
    } else if (postType == "code")
    {
        const dataRef = rtDatabase.ref(date + "/" + lobbyID + "/code/");
        try {

            dataRef.update(data, (error) => {
            if (error) {

                res.send("There was an error sending " + postDataParam + "to the API.");
            }
            else {
                res.send(postDataParam);
            }
            })
        }
        catch (error) // If there is nothing there to update, set instead of update
        {
            dataRef.set(data, (error) => {
            if (error) {

                res.send("There was an error sending " + postDataParam + "to the API.");
            }
            else {
                res.send(postDataParam);
            }
            })
        }
    }
})

module.exports = router;